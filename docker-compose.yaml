version: "3.9"

services:
  # -----------------
  # Catalog Database
  # -----------------
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: shopx
      POSTGRES_PASSWORD: shopx
      POSTGRES_DB: shopx_catalog
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopx -d shopx_catalog"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -----------------
  # Catalog Database
  # -----------------
  postgres_basket:
    image: postgres:16
    environment:
      POSTGRES_USER: shopx
      POSTGRES_PASSWORD: shopx
      POSTGRES_DB: shopx_basket
    ports:
      - "5434:5432"
    volumes:
      - postgres_basket_data:/var/lib/postgresql/data

  # -----------------
  # Catalog API
  # -----------------
  shopx.catalog.api:
    build:
      context: .
      dockerfile: ./src/Modules/Catalog/ShopX.Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=shopx_catalog;Username=shopx;Password=shopx
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "5126:8080"
    depends_on:
      - postgres
      - otel-collector    
    

  # -----------------
  # Basket API
  # -----------------
  shopx.basket.api:
    build:
      context: .
      dockerfile: ./src/Modules/Basket/ShopX.Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__BasketConnection=Host=postgres;Port=5434;Database=shopx_basket;Username=shopx;Password=shopx
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "5002:8080"
    depends_on:
      - postgres
      - otel-collector    
    

  # -----------------
  # Basket API
  # -----------------
  shopx.identity.api:
    build:
      context: .
      dockerfile: ./src/Modules/Identity/ShopX.Identity.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__BasketConnection=Host=postgres;Port=5435;Database=ShopX_IdentityDb;Username=shopx;Password=shopx
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "5003:8080"
    depends_on:
      - postgres
      - otel-collector    
    
  # -----------------
  # Observability
  # -----------------
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.1
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8889:8889"   # Prometheus metrics
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686" # UI دیگه لازم نیست 4317 و 4318 رو publish کنیم

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=Admin@123
    ports:
      - "5341:80"
    volumes:
      - seq_data:/data

volumes:
  postgres_data:
  postgres_basket_data:
  seq_data:
